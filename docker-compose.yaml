version: '3.8'

services:
  primary:
    image: mongo:latest
    command: mongod --replSet rs0 --bind_ip_all --noauth
    ports:
      - "27017:27017"
    volumes:
      - primary_data:/data/db

  secondary1:
    image: mongo:latest
    command: mongod --replSet rs0 --bind_ip_all --noauth
    ports:
      - "27018:27017"
    volumes:
      - secondary1_data:/data/db

  secondary2:
    image: mongo:latest
    command: mongod --replSet rs0 --bind_ip_all --noauth
    ports:
      - "27019:27017"
    volumes:
      - secondary2_data:/data/db

  setup-replica:
    image: mongo:latest
    depends_on:
      - primary
      - secondary1
      - secondary2
    command: >
      bash -c "echo 'Waiting for MongoDB to start...' && sleep 10 &&
      mongosh --host primary --eval '
        rs.initiate({
          _id: \"rs0\",
          members: [
            { _id: 0, host: \"primary:27017\", priority: 100 },
            { _id: 1, host: \"secondary1:27017\", priority: 50 },
            { _id: 2, host: \"secondary2:27017\", priority: 50 }
          ]
        })'" &&
      echo 'Finished setting up the replica set...'

  pubsub-emulator:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:455.0.0-emulators
    command: >
      gcloud beta emulators pubsub start --project=dummy-project --host-port=localhost:8085 --quiet &
      while ! nc -z localhost 8085; do
        sleep 0.1
      done
      python3 /python-pubsub/samples/snippets/publisher.py dummy-project create dummy-topic
      fg %1
    environment: # TODO: use environment variables
      PUBSUB_PROJECT_ID: "emulator"
      PUBSUB_EMULATOR_HOST: "localhost:8085"
      PUBSUB_TOPIC_ID: "dymmy-topic"
    ports:
      - "8085:8085"
    entrypoint: /bin/bash

  mongo-streamer:
    build: .
    depends_on:
      - primary
    restart: always
    environment:
      ENV: "dev"
      LOG_LEVEL: "INFO"
      MONGO_DB_URI: "mongodb://primary:27017/test?tls=false&directConnection=true"

volumes:
  primary_data:
  secondary1_data:
  secondary2_data:
