version: '3.8'

services:
  mongo-primary:
    image: mongo:latest
    command: >
      bash -c "
        echo 'rs.initiate({_id:\"rs0\", members:[{_id:0, host:\"mongo-primary:27017\"}, {_id:1, host:\"mongo-secondary:27017\"}, {_id:2, host:\"mongo-arbiter:27017\", arbiterOnly:true}]});' > /docker-entrypoint-initdb.d/init-replica.js &&
        mongod --replSet rs0 --bind_ip_all --noauth
      "
    ports:
      - "27017:27017"

  mongo-secondary:
    image: mongo:latest
    command: mongod --replSet rs0 --bind_ip_all --noauth
    ports:
      - "27018:27017"
    volumes:
      - secondary_data:/data/db

  mongo-arbiter:
    image: mongo:latest
    command: mongod --replSet rs0 --bind_ip_all --noauth
    ports:
      - "27019:27017"
    volumes:
      - arbiter_data:/data/db

  pubsub-emulator:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:455.0.0-emulators
    command: >
      gcloud beta emulators pubsub start --project=dummy-project --host-port=0.0.0.0:8085 --quiet
    environment: # TODO: use environment variables
      PUBSUB_PROJECT_ID: "dummy-project"
      PUBSUB_EMULATOR_HOST: "localhost:8085"
      PUBSUB_TOPIC_ID: "dymmy-topic"
    ports:
      - "8085:8085"
    entrypoint: /bin/bash

  setup-pubsub-emulator:
    image: gcr.io/google.com/cloudsdktool/cloud-sdk:455.0.0-emulators
    depends_on:
      - pubsub-emulator
    environment:
      PUBSUB_EMULATOR_HOST: "pubsub-emulator:8085"
    command: |
      bash -c "
        until curl -X GET \"http://pubsub-emulator:8085\"; do
          sleep 1
        done
        curl -X PUT "http://pubsub-emulator:8085/v1/projects/dummy-project/topics/dummy-topic"
      "

  mongo-streamer:
    build: .
    restart: always
    depends_on:
      - mongo-primary
      - mongo-secondary
      - mongo-arbiter
      - setup-pubsub-emulator
    ports:
      - "8080:8080"
    develop:
      watch:
        - action: rebuild
          files:
            - ./**/*.go
            - ./go.mod
            - ./go.sum
    environment:
      MONGO_DB_URI: "mongodb://mongo-primary:27017/test?tls=false&directConnection=true&retryWrites=false&replicaSet=rs0"
      MONGO_DB_COLLECTION: test
      MONGO_DB_DATABASE: test
      METRICS_ADDR: :8080
      PUBSUB_PROJECT_ID: "dummy-project"
      PUBSUB_TOPIC_ID: "dummy-topic"
      PUBSUB_EMULATOR_HOST: "pubsub-emulator:8085"
      PUBSUB_PUBLISH_FORMAT: "json"

  prometheus:
    image: prom/prometheus
    depends_on:
      - mongo-streamer
    ports:
      - "9090:9090"
    volumes:
      - ./monitors/prometheus/prometheus.yaml:/etc/prometheus/prometheus.yaml
      - prometheus_data:/prometheus
    command: "--config.file=/etc/prometheus/prometheus.yaml"
    restart: always

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    volumes:
      - ./monitors/grafana/dashboards:/var/lib/grafana/dashboards
      - ./monitors/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/dashboard.yaml
      - ./monitors/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    restart: always

volumes:
  primary_data:
  secondary_data:
  arbiter_data:
  prometheus_data:
  grafana_data:
